type User @model {
  id: ID!
  username: String!
  email: String!
  rating: Float

  car: Car @connection(fields: ["id"])
  orders: [Order] @connection(keyName: "byUser", fields: ["id"])
}

type Car @model {
  id: ID!
  type: String!
  latitude: Float
  longitude: Float
  heading: Float
  isActive: Boolean

  userId: ID!
  user: User @connection(fields: ["userId"])
  orders: [Order] @connection(keyName: "byCar", fields: ["id"])
}

type Order
  @model
  @key(name: "byUser", fields: ["userId"])
  @key(name: "byCar", fields: ["carId", "createdAt"]) {
  id: ID!
  status: String
  createdAt: AWSDateTime!

  userId: ID!
  user: User @connection(fields: ["userId"])

  carId: ID!
  car: Car @connection(fields: ["carId"])
  type: String!

  originLatitude: Float
  originLongitude: Float
  destLatitude: Float
  destLongitude: Float
}

type Subscription {
  onOrderUpdated(id: ID!): Order @aws_subscribe(mutations: ["updateOrder"])
  onCarUpdated(id: ID!): Car @aws_subscribe(mutations: ["updateCar"])
}
